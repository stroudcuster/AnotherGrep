/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/* JavaSE Packaging and Distributing Tutorial Sample Code */

package anothergrep;

import java.io.FileNotFoundException;
import java.io.IOException;

/**
 * Contains the information relating to a single match resulting from the application
 * of the regular expression or information on an Exception that occured while
 * processing a line of a file.
 * 
 * @author Stroud Custer
 */
public class GrepResultDetail {
    private final String fileName;
    private final int lineNbr;
    private final int start;
    private final int end;
    private final Exception exception;
    
    /**
     * Create an instance of GrepResultDetail containing the results of a match.
     * @param fileName String name of the file in which the match was found.
     * @param lineNbr int the line number in which the match was found.
     * @param start int the starting position of the match.
     * @param end int the ending position of the match.
     */
    public GrepResultDetail(String fileName, int lineNbr, int start, int end) {
        this.fileName = fileName;
        this.lineNbr = lineNbr;
        this.start = start;
        this.end = end;
        this.exception = null;
    }
    
    /**
     * Creates an instance of GrepResultDetail containing exception info.
     * @param fileName String name of the file in which the match was found.
     * @param lineNbr int the line number in which the match was found.
     * @param exception the Exception that was thrown.
     */
    public GrepResultDetail(String fileName, int lineNbr, Exception exception) {
        this.fileName = fileName;
        this.lineNbr = lineNbr;
        this.start = 0;
        this.end = 0;
        this.exception = exception;
    }
    
    /**
     * Returns the file name.
     * @return String the name of the file in which the match or exception occurred.
     */
    public String getFileName() {
        return this.fileName;
    }
    
    /**
     * Returns the line number.
     * @return int the line number on which the match or exception occurred.
     */
    public int getLineNbr() {
        return this.lineNbr;
    }
    
    /**
     * Returns the starting position of the match.
     * @return int starting position of the match.
     */
    public int getStart() {
        return this.start;
    }
    
    /**
     * Returns the ending position of the match.
     * @return int ending position of the match.
     */
    public int getEnd() {
        return this.end;
    }
    
    /**
     * Returns true if the instance was generated by an exception.
     * @return boolean true if the instance's exception member is non-null.
     */
    public boolean isException() {
        return (this.exception != null);
    }
    
    /**
     * Returns the Exception that generated the instance.
     * @return Exception generated by the instance.
     */
    public Exception getException() {
        return this.exception;
    }
    
    @Override
    public String toString() {
        String result = new String();
        if (this.isException()) {
            if (this.getException() instanceof FileNotFoundException) {
                result = "\t" + this.getFileName() + " Exception: " + 
                        this.getException().getMessage();
            } else if (this.getException() instanceof IOException) {
                result = "\t" + this.getFileName() + " Line: " + 
                        String.valueOf(this.getLineNbr()) + " Exception: " + 
                        this.getException().getMessage();
            }
        } else {
            result = "\t" + this.getFileName() + " Line: " + 
                    String.valueOf(this.lineNbr) + 
                    " Start " + String.valueOf(this.start) + 
                    " End: " + String.valueOf(this.end) + "\n";
        }
        return result;
    }
}
